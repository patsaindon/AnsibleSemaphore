---

- name: Update Lidarr Extended Scripts
  gather_facts: false
  hosts: all
  vars:
    container_name: "lidarr"
    host_ip: "192.168.2.16"
    app_port: "8686"

  tasks:
    # FACTS ##################################################################
    - name: Stop a container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: stopped
        
    - name: Update Extended Scripts
      shell: |
        wget "https://raw.githubusercontent.com/RandomNinjaAtk/arr-scripts/main/"{{ container_name }}"/extended.conf" >> "/mnt/user/appdata/"{{ container_name }}"/extended.conf"
    
    - name: Set downloadPath in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^downloadPath=""'
        line: downloadPath="/downloads/extended"
    
    - name: Set videoPath in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^videoPath=""'
        line: videoPath="/musicvideos/"
    
    - name: Set enableUnmappedFilesCleaner in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^enableUnmappedFilesCleaner=""'
        line: enableUnmappedFilesCleaner="false"
    
    - name: Set enableUnmappedFilesCleaner in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^enableUnmappedFilesCleaner=""'
        line: enableUnmappedFilesCleaner="false"
    
    - name: Set addDeezerTopArtists in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^addDeezerTopArtists=""'
        line: addDeezerTopArtists="true"
    
    - name: Set addDeezerTopAlbumArtists in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^addDeezerTopAlbumArtists=""'
        line: addDeezerTopAlbumArtists="true"
    
    - name: Set addDeezerTopTrackArtists in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^addDeezerTopTrackArtists=""'
        line: addDeezerTopTrackArtists="true"
                                       
    - name: Set plexUrl in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^plexUrl=""'
        line: plexUrl="http://'{{ host_ip }}':32400"
    
    - name: Set plexToken in extended.conf
      ansible.builtin.lineinfile:
        path: "/mnt/user/appdata/{{ container_name }}/extended.conf"
        regexp: '^plexToken=""'
        line: plexToken="yyUBMrLWTPW2FWhchH1h"

    - name: Restart a container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: started
        
    - name: Waits for connections, don't start checking for 30 seconds
      ansible.builtin.wait_for:
        host: "{{ host_ip }}"
        delay: 180
        port: "{{ app_port }}"

    - name: Restart a container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: started
        restart: true
        
    - name: Waits for connections, don't start checking for 30 seconds
      ansible.builtin.wait_for:
        host: "{{ host_ip }}"
        delay: 30
        port: "{{ app_port }}"

    - name: Restart a container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: started
        restart: true
